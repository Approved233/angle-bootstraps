name: Matrixed Linux Build

on: 
  push:
    branches: 
      - master
  schedule:
    - cron: "0 0 * * *"

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        target: [ggp, linux]
        variant: [Release]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.target }} - ${{ matrix.variant }} on ${{ matrix.os }}
    steps:
      - name: Discord message (1)
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data "{ \"content\": \"Starting ANGLE ${{ matrix.variant }} job for ${{ matrix.target }} on ${{ matrix.os }}.\" }" \
            ${{ secrets.DISCORD_WEBHOOK }}
      - name: Check out source
        uses: actions/checkout@v1
      - name: Environment bootstrap
        run: sudo ./prep-gitlab.sh
      - name: Bootstrap ${{ matrix.variant }} ANGLE environment for ${{ matrix.target }} on ${{ matrix.os }}  
        run: ./bootstrap-moded.sh ${{ matrix.variant }} ${{ matrix.target }}
      - name: Discord message (2)
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data "{ \"content\": \"Starting ANGLE ${{ matrix.variant }} build for ${{ matrix.target }} on ${{ matrix.os }}.\" }" \
            ${{ secrets.DISCORD_WEBHOOK }}
      - name: Build ANGLE ${{ matrix.variant }} for ${{ matrix.target }} on ${{ matrix.os }}  
        run: ./makestrap.sh ${{ matrix.variant }}
      - name: Discord message (3)
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data "{ \"content\": \"ANGLE ${{ matrix.variant }} for ${{ matrix.target }} on ${{ matrix.os }} has been built!\" }" \
            ${{ secrets.DISCORD_WEBHOOK }}
      - name: Compress ${{ matrix.variant }} artifacts for ${{ matrix.target }} on ${{ matrix.os }}  
        run: |
          mkdir -p artifacts/lib;
          cp -r angle/out/${{ matrix.variant }}/*.so artifacts/lib;
          cp -r angle/include artifacts;
          cp  angle/out/${{ matrix.variant }}/args.gn artifacts;
          cd artifacts/;
          tar -cf ../${{ matrix.variant }}.tar *;
          gzip ../${{ matrix.variant }}.tar;
      - name: Archive ANGLE ${{ matrix.variant }} Build Artifacts for ${{ matrix.target }} on ${{ matrix.os }}  
        uses: actions/upload-artifact@master
        with:
          name: Artifacts for ${{ matrix.target }} ${{ matrix.variant }} on ${{ matrix.os }}
          path: artifacts
      - name: Discord message (4)
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --data "{ \"content\": \"ANGLE ${{ matrix.variant }} for ${{ matrix.target }} on ${{ matrix.os }} :: Artifacts deployed!\" }" \
            ${{ secrets.DISCORD_WEBHOOK }}
